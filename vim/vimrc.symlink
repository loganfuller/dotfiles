" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Vundle Plugins
" --------------

filetype off " required by vundle

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim' " let Vundle manage Vundle, required
Plugin 'kien/ctrlp.vim' " fuzzy file searching
Plugin 'christoomey/vim-tmux-navigator' " seamlessly navigate vim / tmux splits
Plugin 'ntpeters/vim-better-whitespace' " highlight trailing whitespace

" all of your Plugins must be added before the following line
call vundle#end()
filetype plugin indent on


" Colours
" -------

set background=dark " solarized dark
colorscheme solarized " beautiful theme
syntax on " enable syntax processing


" Spaces & Tabs
" -------------

set shiftwidth=4 " number of visual spaces per TAB
set softtabstop=4 " number of spaces in TAB when editing
set expandtab " tabs are spaces

" When opening a new line and no filetype-specific indenting is enabled, keep
" the same indent as the line you're currently on
set autoindent


" UI Config
" ---------

" Always display the status line, even if only one window is displayed
set laststatus=2

set number " show line numbers on the left
set showcmd " show command in bottom bar
filetype indent on " load filetype-specific indent files (from ~/.vim/indent)
set wildmenu " visual autocomplete for command menu
set lazyredraw " redraw only when we need to.
set ruler " show the cursor position all the time
set showmatch " highlight matching [{()}]
set mouse=a " enable mouse
set confirm " Instead of failing a command because of unsaved changes, ask if you wish to save changed files.
set autoread " Set to auto read when a file is changed from the outside.
set textwidth=80 colorcolumn=+1 " display marker at 80 char column
set cursorline " add horizontal line to highlight cursor location

" Searching
" ---------

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

set incsearch " search as characters are entered
set hlsearch " enable search highlighting

" return turns off search highlighting until the next search
nnoremap <silent> <CR> :noh<CR><CR>


" Folding
" -------

" Nothing for now - this is a placeholder


" Moving
" ------

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" much nicer window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright


" Leader Shortcuts
" ----------------

" more efficient escape bindings
inoremap jj <Esc>
inoremap jk <Esc>


" CtrlP Settings
" --------------

" change the default mapping and the default command to invoke CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" when invoked, unless a starting directory is specified, CtrlP will set its local working directory according to this variable
let g:ctrlp_working_path_mode = 'ra'


" netrw Settings
" -----------------

" NOTE: Press o to open in horizontal split, <cr> to open in vertical split

" Map ctrl-n to netrw
map <C-n> :Ex<cr>

let g:netrw_liststyle = 3 " nicer directory layout
let g:netrw_preview = 0 " open preview with p - preview shown in horizontal split (CTRL-W_z to close)
let g:netrw_use_errorwindow = 0 " netrw errors don't need to be closed
let g:netrw_browse_split = 2 " netrw windows opened in vertical split

" Backups
" -------

" Move backups to the tmp folder
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup
